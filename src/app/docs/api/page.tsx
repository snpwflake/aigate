"use client";

import { useState, useEffect, useRef, useCallback } from "react";
import Link from "next/link";
import { ArrowLeft, Key, Globe, AlertCircle } from "lucide-react";
import CodeBlock from "@/components/docs/CodeBlock";
import NavigationSidebar from "@/components/docs/NavigationSidebar";

const models = [
  {
    name: "gpt-4o-mini",
    description: "–ñ—ã–ª–¥–∞–º –∂”ô–Ω–µ “Ø–Ω–µ–º–¥—ñ GPT-4 –º–æ–¥–µ–ª—å",
    context: "128K —Ç–æ–∫–µ–Ω",
    features: "–ö”©–ø—Ç–µ–≥–µ–Ω —Ç–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä “Ø—à—ñ–Ω –æ“£—Ç–∞–π–ª—ã",
    pricing: { input: 27, output: 108 },
  },
  {
    name: "gpt-4o",
    description: "–ñ–µ—Ç—ñ–ª–¥—ñ—Ä—ñ–ª–≥–µ–Ω GPT-4 –º–æ–¥–µ–ª—å",
    context: "128K —Ç–æ–∫–µ–Ω",
    features: "–ñ–æ“ì–∞—Ä—ã —Å–∞–ø–∞–ª—ã –∂–∞—É–∞–ø—Ç–∞—Ä",
    pricing: { input: 450, output: 1800 },
  },
  {
    name: "gpt-3.5-turbo",
    description: "gpt-4o-mini-–≥–µ –±–∞“ì—ã—Ç—Ç–∞–ª“ì–∞–Ω",
    context: "16K —Ç–æ–∫–µ–Ω",
    features: "OpenAI “Ø–π–ª–µ—Å—ñ–º–¥—ñ–ª—ñ–≥—ñ",
    pricing: { input: 27, output: 108 },
  },
  {
    name: "deepseek-r1",
    description: "–ñ–µ—Ç—ñ–ª–¥—ñ—Ä—ñ–ª–≥–µ–Ω –æ–π–ª–∞—É –º–æ–¥–µ–ª—å",
    context: "64K —Ç–æ–∫–µ–Ω",
    features: "–õ–æ–≥–∏–∫–∞–ª—ã“õ —Ç–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä",
    pricing: { input: 99, output: 394 },
  },
  {
    name: "deepseek-chat",
    description: "–ß–∞—Ç “Ø—à—ñ–Ω “Ø–Ω–µ–º–¥—ñ –º–æ–¥–µ–ª—å",
    context: "32K —Ç–æ–∫–µ–Ω",
    features: "–ñ–∞–ª–ø—ã –º–∞“õ—Å–∞—Ç—Ç–∞“ì—ã —á–∞—Ç",
    pricing: { input: 25, output: 50 },
  },
  {
    name: "claude-3.5-sonnet",
    description: "Anthropic Claude –º–æ–¥–µ–ª—å",
    context: "200K —Ç–æ–∫–µ–Ω",
    features: "“∞–∑—ã–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç—Ç–µ—Ä",
    pricing: { input: 540, output: 2700 },
  },
  {
    name: "gemini-2.0-flash",
    description: "Google –∂—ã–ª–¥–∞–º –º–æ–¥–µ–ª—å",
    context: "32K —Ç–æ–∫–µ–Ω",
    features: "–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–¥—ñ–ª—ñ–∫",
    pricing: { input: 54, output: 450 },
  },
];

const errorCodes = [
  {
    code: "400",
    type: "invalid_request_error",
    description: "–î“±—Ä—ã—Å –µ–º–µ—Å —Å“±—Ä–∞—É –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä—ñ",
    solution: "–î–µ—Ä–µ–∫—Ç–µ—Ä —Ñ–æ—Ä–º–∞—Ç—ã–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑",
  },
  {
    code: "401",
    type: "invalid_request_error",
    description: "API –∫—ñ–ª—Ç—ñ –∂–æ“õ",
    solution: "Authorization —Ç–∞“õ—ã—Ä—ã–±—ã–Ω “õ–æ—Å—ã“£—ã–∑",
  },
  {
    code: "401",
    type: "invalid_request_error",
    description: "–î“±—Ä—ã—Å –µ–º–µ—Å API –∫—ñ–ª—Ç—ñ",
    solution: "–ö—ñ–ª—Ç—Ç—ñ“£ –¥“±—Ä—ã—Å—Ç—ã“ì—ã–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑",
  },
  {
    code: "402",
    type: "insufficient_balance",
    description: "“ö–∞—Ä–∞–∂–∞—Ç –∂–µ—Ç–∫—ñ–ª—ñ–∫—Å—ñ–∑",
    solution: "–ë–∞–ª–∞–Ω—Å—Ç—ã —Ç–æ–ª—Ç—ã—Ä—ã“£—ã–∑",
  },
  {
    code: "408",
    type: "timeout_error",
    description: "–°“±—Ä–∞—É —É–∞“õ—ã—Ç—ã ”©—Ç—Ç—ñ",
    solution: "–°“±—Ä–∞—É–¥—ã “õ–∞–π—Ç–∞–ª–∞“£—ã–∑",
  },
  {
    code: "429",
    type: "rate_limit_exceeded",
    description: "–°“±—Ä–∞—É–ª–∞—Ä –ª–∏–º–∏—Ç—ñ –∞—Å—Ç—ã",
    solution: "–°“±—Ä–∞—É–ª–∞—Ä –∂–∏—ñ–ª—ñ–≥—ñ–Ω –∞–∑–∞–π—Ç—ã“£—ã–∑",
  },
  {
    code: "502",
    type: "connection_error",
    description: "–ñ–ò-“ì–∞ “õ–æ—Å—ã–ª—É “õ–∞—Ç–µ—Å—ñ",
    solution: "–ö–µ–π—ñ–Ω—ñ—Ä–µ–∫ –∫”©—Ä—ñ“£—ñ–∑",
  },
  {
    code: "500",
    type: "server_error",
    description: "–°–µ—Ä–≤–µ—Ä–¥—ñ“£ —ñ—à–∫—ñ “õ–∞—Ç–µ—Å—ñ",
    solution: "“ö–æ–ª–¥–∞—É “õ—ã–∑–º–µ—Ç—ñ–Ω–µ —Ö–∞–±–∞—Ä–ª–∞—Å—ã“£—ã–∑",
  },
];

// –¢–∏–ø—ã –¥–ª—è intersection observer
interface VisibilityEntry {
  entry: IntersectionObserverEntry | null;
  ratio: number;
}

export default function ApiDocsPage() {
  const [activeSection, setActiveSection] = useState("overview");
  const observerRef = useRef<IntersectionObserver | null>(null);

  const initializeObserver = useCallback(() => {
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π observer
    if (observerRef.current) {
      observerRef.current.disconnect();
    }

    const sections = document.querySelectorAll(".endpoint-section");

    if (sections.length === 0) {
      console.log("No sections found, retrying in 100ms...");
      setTimeout(initializeObserver, 100);
      return;
    }

    console.log(`Initializing observer for ${sections.length} sections`);

    const observer = new IntersectionObserver(
      (entries) => {
        let mostVisible: VisibilityEntry = { entry: null, ratio: 0 };

        entries.forEach((entry) => {
          if (
            entry.isIntersecting &&
            entry.intersectionRatio > mostVisible.ratio
          ) {
            mostVisible = { entry, ratio: entry.intersectionRatio };
          }
        });

        if (mostVisible.entry) {
          const sectionId = mostVisible.entry.target.id;
          setActiveSection(sectionId);
        }
      },
      {
        threshold: [0.1, 0.3, 0.5, 0.7],
        rootMargin: "-80px 0px -50% 0px",
      }
    );

    sections.forEach((section) => {
      observer.observe(section);
    });

    observerRef.current = observer;
  }, []);

  useEffect(() => {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
    const timer = setTimeout(initializeObserver, 300);

    return () => {
      clearTimeout(timer);
      if (observerRef.current) {
        observerRef.current.disconnect();
      }
    };
  }, [initializeObserver]);

  useEffect(() => {
    // Highlight.js initialization
    if (
      typeof window !== "undefined" &&
      (window as unknown as { hljs?: unknown }).hljs
    ) {
      const hljs = (window as unknown as { hljs: { highlightAll: () => void } })
        .hljs;
      hljs.highlightAll();
    }

    // Smooth scrolling for anchor links
    const handleAnchorClick = (e: Event) => {
      const target = e.target as HTMLAnchorElement;
      if (target.href && target.href.includes("#")) {
        e.preventDefault();
        const id = target.href.split("#")[1];
        console.log(id);
        const element = document.getElementById(id);
        if (element) {
          element.scrollIntoView({ behavior: "smooth", block: "start" });
          setActiveSection(id);
        }
      }
    };

    document.addEventListener("click", handleAnchorClick);
    return () => document.removeEventListener("click", handleAnchorClick);
  }, []);

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-gradient-to-r from-secondary-500 to-accent-500 text-white py-16">
        <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <Link
            href="/"
            className="inline-flex items-center gap-2 text-white hover:text-gray-200 mb-6 font-medium transition-colors"
          >
            <ArrowLeft size={20} />
            –ë–∞—Å—Ç—ã –±–µ—Ç–∫–µ “õ–∞–π—Ç—É
          </Link>

          <div className="text-center">
            <h1 className="text-4xl md:text-5xl font-bold mb-4">
              AIGATE API “ö“±–∂–∞—Ç—Ç–∞–º–∞—Å—ã
            </h1>
            <p className="text-xl mb-4 opacity-90">
              –ë—ñ–∑–¥—ñ“£ –∂–∞—Å–∞–Ω–¥—ã –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç “õ—ã–∑–º–µ—Ç—ñ–º–µ–Ω –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–ª–∞—É “Ø—à—ñ–Ω API
              –ø–∞–π–¥–∞–ª–∞–Ω—É –∂”©–Ω—ñ–Ω–¥–µ–≥—ñ —Ç–æ–ª—ã“õ –Ω“±—Å“õ–∞—É–ª—ã“õ
            </p>
            <div className="flex flex-wrap justify-center gap-4 text-sm">
              <span className="bg-white/20 px-3 py-1 rounded-full">
                OpenAI API “Ø–π–ª–µ—Å—ñ–º–¥—ñ–ª—ñ–≥—ñ
              </span>
              <span className="bg-white/20 px-3 py-1 rounded-full">
                –ö”©–ø—Ç–µ–≥–µ–Ω –º–æ–¥–µ–ª—å–¥–µ—Ä–¥—ñ “õ–æ–ª–¥–∞—É
              </span>
              <span className="bg-white/20 px-3 py-1 rounded-full">
                –ñ—ã–ª–¥–∞–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
              </span>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="flex gap-8">
          {/* Navigation Sidebar */}
          <NavigationSidebar activeSection={activeSection} />

          {/* Main Content */}
          <div className="flex-1 space-y-8">
            {/* Overview Section */}
            <section
              id="overview"
              className="endpoint-section bg-white rounded-xl p-8 shadow-sm"
            >
              <h2 className="text-2xl font-bold text-gray-900 mb-6 flex items-center gap-3">
                üìã –®–æ–ª—É
              </h2>

              <div className="bg-blue-50 border border-blue-200 rounded-xl p-6 mb-8">
                <h4 className="font-semibold text-blue-900 mb-3">
                  –ù–µ–≥—ñ–∑–≥—ñ URL –º–µ–∫–µ–Ω–∂–∞–π–ª–∞—Ä—ã
                </h4>
                <div className="space-y-2">
                  <div className="bg-white p-3 rounded border-l-4 border-blue-500">
                    <strong className="text-gray-900">
                      OpenAI Compatible API:
                    </strong>
                    <code className="ml-2 text-blue-600">
                      https://api.aigate.kz/v1/
                    </code>
                  </div>
                  <div className="bg-white p-3 rounded border-l-4 border-green-500">
                    <strong className="text-gray-900">
                      –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å API:
                    </strong>
                    <code className="ml-2 text-green-600">
                      https://aigate.kz/api/
                    </code>
                  </div>
                </div>
              </div>

              <h3 className="text-xl font-semibold text-gray-900 mb-4">
                “ö–æ–ª–¥–∞—É –∫”©—Ä—Å–µ—Ç—ñ–ª–µ—Ç—ñ–Ω –º–æ–¥–µ–ª—å–¥–µ—Ä
              </h3>
              <div className="overflow-x-auto">
                <table className="w-full border-collapse bg-white rounded-lg overflow-hidden shadow-sm">
                  <thead className="bg-gray-50">
                    <tr>
                      <th className="px-6 py-3 text-left font-semibold text-gray-900">
                        –ú–æ–¥–µ–ª—å
                      </th>
                      <th className="px-6 py-3 text-left font-semibold text-gray-900">
                        –°–∏–ø–∞—Ç—Ç–∞–º–∞—Å—ã
                      </th>
                      <th className="px-6 py-3 text-left font-semibold text-gray-900">
                        –ö–æ–Ω—Ç–µ–∫—Å—Ç
                      </th>
                      <th className="px-6 py-3 text-left font-semibold text-gray-900">
                        –ë–∞“ì–∞ (‚Ç∏/1M)
                      </th>
                    </tr>
                  </thead>
                  <tbody className="divide-y divide-gray-200">
                    {models.map((model) => (
                      <tr key={model.name} className="hover:bg-gray-50">
                        <td className="px-6 py-4">
                          <code className="bg-gray-100 px-2 py-1 rounded text-sm font-mono text-gray-800">
                            {model.name}
                          </code>
                        </td>
                        <td className="px-6 py-4 text-gray-700">
                          {model.description}
                        </td>
                        <td className="px-6 py-4 text-gray-700">
                          {model.context}
                        </td>
                        <td className="px-6 py-4">
                          <div className="text-sm">
                            <div>–ö—ñ—Ä—ñ—Å: {model.pricing.input} ‚Ç∏</div>
                            <div>–®—ã“ì—ã—Å: {model.pricing.output} ‚Ç∏</div>
                          </div>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </section>

            {/* Authentication Section */}
            <section
              id="auth"
              className="endpoint-section bg-white rounded-xl p-8 shadow-sm"
            >
              <h2 className="text-2xl font-bold text-gray-900 mb-6 flex items-center gap-3">
                üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
              </h2>

              <p className="text-gray-700 mb-6">
                AIGATE –µ–∫—ñ —Ç“Ø—Ä–ª—ñ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è–Ω—ã “õ–æ–ª–¥–∞–π–¥—ã:
              </p>

              <div className="space-y-6">
                <div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2">
                    <Key size={20} />
                    1. API –∫—ñ–ª—Ç—Ç–µ—Ä—ñ (—Å—ã—Ä—Ç“õ—ã “õ–æ—Å—ã–º—à–∞–ª–∞—Ä “Ø—à—ñ–Ω)
                  </h3>
                  <div className="bg-yellow-50 border border-yellow-200 rounded-xl p-6">
                    <p className="mb-3">
                      <strong>–§–æ—Ä–º–∞—Ç—ã:</strong> Authorization —Ç–∞“õ—ã—Ä—ã–±—ã–Ω–¥–∞“ì—ã
                      Bearer —Ç–æ–∫–µ–Ω
                    </p>
                    <div className="bg-green-100 border border-green-300 p-3 rounded font-mono text-sm text-green-800 mb-4">
                      Authorization: Bearer sk-aigate-your-api-key-here
                    </div>
                    <p className="text-gray-700 mb-4">
                      API –∫—ñ–ª—Ç—Ç–µ—Ä—ñ –∂–µ–∫–µ –∫–∞–±–∏–Ω–µ—Ç—Ç–µ –∂–∞—Å–∞–ª–∞–¥—ã –∂”ô–Ω–µ OpenAI “Ø–π–ª–µ—Å—ñ–º–¥—ñ
                      API-“ì–∞ “õ–æ–ª –∂–µ—Ç–∫—ñ–∑—É “Ø—à—ñ–Ω –ø–∞–π–¥–∞–ª–∞–Ω—ã–ª–∞–¥—ã.
                    </p>
                    <Link
                      href="/dashboard"
                      className="inline-flex items-center gap-2 bg-primary-600 text-white px-6 py-3 rounded-lg hover:bg-primary-700 transition-colors font-medium"
                    >
                      <Key size={18} />
                      API –∫—ñ–ª—Ç—ñ–Ω –∞–ª—É “Ø—à—ñ–Ω Dashboard-“õ–∞ ”©—Ç—ñ“£—ñ–∑
                    </Link>
                  </div>
                </div>

                <div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2">
                    <Globe size={20} />
                    2. JWT —Ç–æ–∫–µ–Ω–¥–µ—Ä (–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å “Ø—à—ñ–Ω)
                  </h3>
                  <div className="bg-blue-50 border border-blue-200 rounded-xl p-6">
                    <p className="mb-3">
                      <strong>–§–æ—Ä–º–∞—Ç—ã:</strong> Bearer JWT —Ç–æ–∫–µ–Ω
                    </p>
                    <div className="bg-blue-100 border border-blue-300 p-3 rounded font-mono text-sm text-blue-800 mb-4">
                      Authorization: Bearer
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                    </div>
                    <p className="text-gray-700">
                      JWT —Ç–æ–∫–µ–Ω–¥–µ—Ä –∂“Ø–π–µ–≥–µ –∫—ñ—Ä—É –∫–µ–∑—ñ–Ω–¥–µ –∞–ª—ã–Ω–∞–¥—ã –∂”ô–Ω–µ –≤–µ–±-API “Ø—à—ñ–Ω
                      –ø–∞–π–¥–∞–ª–∞–Ω—ã–ª–∞–¥—ã.
                    </p>
                  </div>
                </div>
              </div>

              <div className="bg-red-50 border border-red-200 rounded-xl p-6 mt-6">
                <div className="flex items-start gap-3">
                  <AlertCircle className="text-red-600 mt-0.5" size={20} />
                  <div>
                    <strong className="text-red-900">‚ö†Ô∏è –ú–∞“£—ã–∑–¥—ã:</strong>
                    <p className="text-red-800 mt-1">
                      API –∫—ñ–ª—Ç—Ç–µ—Ä—ñ–Ω –∫–ª–∏–µ–Ω—Ç –∫–æ–¥—ã–Ω–¥–∞ –µ—à“õ–∞—à–∞–Ω –±–µ—Ä–º–µ“£—ñ–∑. –û–ª–∞—Ä–¥—ã —Ç–µ–∫
                      —Å–µ—Ä–≤–µ—Ä–¥–µ –ø–∞–π–¥–∞–ª–∞–Ω—ã“£—ã–∑.
                    </p>
                  </div>
                </div>
              </div>

              <div className="mt-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-3">
                  API –∫—ñ–ª—Ç—ñ–Ω –∞–ª—É
                </h3>
                <p className="text-gray-700 mb-3">API –∫—ñ–ª—Ç—ñ–Ω –∞–ª—É “Ø—à—ñ–Ω:</p>
                <ol className="list-decimal list-inside space-y-2 text-gray-700 ml-4">
                  <li>
                    <Link
                      href="/dashboard"
                      className="text-primary-600 hover:underline"
                    >
                      Dashboard –±–µ—Ç—ñ–Ω–µ
                    </Link>{" "}
                    ”©—Ç—ñ“£—ñ–∑
                  </li>
                  <li>–¢—ñ—Ä–∫–µ–ª—ñ“£—ñ–∑ –Ω–µ–º–µ—Å–µ –∂“Ø–π–µ–≥–µ –∫—ñ—Ä—ñ“£—ñ–∑</li>
                  <li>API –∫—ñ–ª—Ç—Ç–µ—Ä—ñ –±”©–ª—ñ–º—ñ–Ω–µ ”©—Ç—ñ“£—ñ–∑</li>
                  <li>–ñ–∞“£–∞ –∫—ñ–ª—Ç –∂–∞—Å–∞—É –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω –±–∞—Å—ã“£—ã–∑</li>
                  <li>–ö—ñ–ª—Ç—Ç—ñ “õ–∞—É—ñ–ø—Å—ñ–∑ –∂–µ—Ä–¥–µ —Å–∞“õ—Ç–∞“£—ã–∑</li>
                </ol>
              </div>
            </section>

            {/* OpenAI Compatible API */}
            <section
              id="openai-api"
              className="endpoint-section bg-white rounded-xl p-8 shadow-sm"
            >
              <h2 className="text-2xl font-bold text-gray-900 mb-6">
                ü§ñ OpenAI Compatible API
              </h2>

              <div className="bg-green-50 border border-green-200 rounded-xl p-6 mb-6">
                <h4 className="font-semibold text-green-900 mb-2">
                  –¢–æ–ª—ã“õ OpenAI “Ø–π–ª–µ—Å—ñ–º–¥—ñ–ª—ñ–≥—ñ
                </h4>
                <p className="text-green-800">
                  –ë—ñ–∑–¥—ñ“£ API OpenAI —Ñ–æ—Ä–º–∞—Ç—ã–º–µ–Ω 100% “Ø–π–ª–µ—Å—ñ–º–¥—ñ. “ö–æ–ª–¥–∞–Ω—ã—Å—Ç–∞“ì—ã
                  OpenAI –∫–æ–¥—ã“£—ã–∑–¥—ã —Ç–µ–∫ base_url ”©–∑–≥–µ—Ä—Ç—É –∞—Ä“õ—ã–ª—ã –ø–∞–π–¥–∞–ª–∞–Ω–∞ –∞–ª–∞—Å—ã–∑.
                </p>
              </div>

              <div className="space-y-6">
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-3">
                    Chat Completions
                  </h3>
                  <div className="flex items-center gap-3 mb-4">
                    <span className="bg-blue-600 text-white px-3 py-1 rounded text-sm font-semibold">
                      POST
                    </span>
                    <code className="bg-gray-100 px-3 py-2 rounded text-gray-800">
                      /v1/chat/completions
                    </code>
                  </div>

                  <CodeBlock
                    language="javascript"
                    title="OpenAI –∫—ñ—Ç–∞–ø—Ö–∞–Ω–∞—Å—ã–º–µ–Ω"
                    code={`const OpenAI = require('openai');

const client = new OpenAI({
    apiKey: 'sk-aigate-your-api-key',
    baseURL: 'https://api.aigate.kz/v1/',
});

const response = await client.chat.completions.create({
    messages: [
        { role: 'user', content: '“ö—ã–∑—ã“õ—Ç—ã —Ñ–∞–∫—Ç –∞–π—Ç' }
    ],
    model: 'gpt-4o-mini',
    max_tokens: 100,
    temperature: 0.7
});

console.log(response.choices[0].message.content);`}
                  />

                  <CodeBlock
                    language="python"
                    title="Python OpenAI –∫—ñ—Ç–∞–ø—Ö–∞–Ω–∞—Å—ã–º–µ–Ω"
                    code={`from openai import OpenAI

client = OpenAI(
    api_key='sk-aigate-your-api-key',
    base_url='https://api.aigate.kz/v1/',
)

response = client.chat.completions.create(
    messages=[
        {'role': 'user', 'content': '“ö—ã–∑—ã“õ—Ç—ã —Ñ–∞–∫—Ç –∞–π—Ç'}
    ],
    model='gpt-4o-mini',
    max_tokens=100,
    temperature=0.7
)

print(response.choices[0].message.content)`}
                  />
                </div>

                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-3">
                    –ü–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä
                  </h3>
                  <div className="overflow-x-auto">
                    <table className="w-full border-collapse bg-gray-50 rounded-lg overflow-hidden">
                      <thead className="bg-gray-100">
                        <tr>
                          <th className="px-4 py-3 text-left font-semibold text-gray-900">
                            –ü–∞—Ä–∞–º–µ—Ç—Ä
                          </th>
                          <th className="px-4 py-3 text-left font-semibold text-gray-900">
                            –¢“Ø—Ä—ñ
                          </th>
                          <th className="px-4 py-3 text-left font-semibold text-gray-900">
                            –ú—ñ–Ω–¥–µ—Ç—Ç—ñ
                          </th>
                          <th className="px-4 py-3 text-left font-semibold text-gray-900">
                            –°–∏–ø–∞—Ç—Ç–∞–º–∞—Å—ã
                          </th>
                        </tr>
                      </thead>
                      <tbody className="divide-y divide-gray-200">
                        <tr>
                          <td className="px-4 py-3">
                            <code className="text-sm">messages</code>
                          </td>
                          <td className="px-4 py-3">array</td>
                          <td className="px-4 py-3 text-red-600 font-semibold">
                            –ò”ô
                          </td>
                          <td className="px-4 py-3">
                            –•–∞–±–∞—Ä–ª–∞—Ä –º–∞—Å—Å–∏–≤—ñ (role, content)
                          </td>
                        </tr>
                        <tr>
                          <td className="px-4 py-3">
                            <code className="text-sm">model</code>
                          </td>
                          <td className="px-4 py-3">string</td>
                          <td className="px-4 py-3 text-gray-500">–ñ–æ“õ</td>
                          <td className="px-4 py-3">
                            AI –º–æ–¥–µ–ª—å –∞—Ç–∞—É—ã (”ô–¥–µ–ø–∫—ñ: gpt-4o-mini)
                          </td>
                        </tr>
                        <tr>
                          <td className="px-4 py-3">
                            <code className="text-sm">max_tokens</code>
                          </td>
                          <td className="px-4 py-3">integer</td>
                          <td className="px-4 py-3 text-gray-500">–ñ–æ“õ</td>
                          <td className="px-4 py-3">
                            –ú–∞–∫—Å–∏–º–∞–ª–¥—ã —Ç–æ–∫–µ–Ω–¥–µ—Ä —Å–∞–Ω—ã
                          </td>
                        </tr>
                        <tr>
                          <td className="px-4 py-3">
                            <code className="text-sm">temperature</code>
                          </td>
                          <td className="px-4 py-3">float</td>
                          <td className="px-4 py-3 text-gray-500">–ñ–æ“õ</td>
                          <td className="px-4 py-3">
                            –ö—Ä–µ–∞—Ç–∏–≤—Ç—ñ–ª—ñ–∫ –¥–µ“£–≥–µ–π—ñ (0.0-2.0)
                          </td>
                        </tr>
                        <tr>
                          <td className="px-4 py-3">
                            <code className="text-sm">stream</code>
                          </td>
                          <td className="px-4 py-3">boolean</td>
                          <td className="px-4 py-3 text-gray-500">–ñ–æ“õ</td>
                          <td className="px-4 py-3">
                            Streaming —Ä–µ–∂–∏–º—ñ (”ô–∑—ñ—Ä–≥–µ “õ–æ–ª–¥–∞—É –∫”©—Ä—Å–µ—Ç—ñ–ª–º–µ–π–¥—ñ)
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </section>

            {/* –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π... */}
            {/* –î–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é —Ç–æ–ª—å–∫–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏ */}
          </div>
        </div>
      </div>
    </div>
  );
}
